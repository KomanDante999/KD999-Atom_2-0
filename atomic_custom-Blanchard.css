/*  ===============  color  =============== */
:root {
  /* function linear scale  */
  --max-sz_1: 160;    /* max size for max viewport (without a unit of measurement!!!)*/
  --min-sz_1: 50;     /* mix size for min viewport  (without a unit of measurement!!!)*/
  --max-M_1: 1920;    /* max viewport  (without a unit of measurement!!!)*/
  --min-M_1: 1440;    /* min viewport  (without a unit of measurement!!!)*/
  --fn-scale_1: calc(var(--min-sz_1)*1px + (var(--max-sz_1) - var(--min-sz_1))*((100vw - var(--min-M_1)*1px)/(var(--max-M_1) - var(--min-M_1))));
  /* Функция масштабирования где:
  max-sz - максимальный размер объекта при ширине вьюпорта max-M
  min-sz - мнимальный размер объекта при ширине вьюпорта min-M

  Пример использования:
  В макете задан паддинг контейнера 160px на брекпоинте 1920px и 50px на брекпоинте 1024px.
  Необходимо линейное изменение паддинга от 1920px до 1024px без дополнительных брекпоинтов.
  Задаем начальное и конечное значение паддинга (без едениц измерения)
  --max-sz: 160;
  --min-sz: 50;
  начальный и конечный брекпоинт (без едениц измерения)
  --max-M: 1920;
  --min-M: 1024;
  Получаем линейное изменение паддинга от начального брекпоинта к конечному в переменной --fn-scale
  */

  --padding_container_x: var(--fn-scale_1);

  --c_white-085: hsla(0, 0%, 100%, .85);
  --c_white-07: hsla(0, 0%, 100%, .7);
  --c_grey-100: hsla(0, 0%, 93%, 1);
  --c_grey-200: hsla(0, 0%, 79%, 1);
  --c_grey-300: hsla(0, 0%, 71%, 1);
  --c_grey-400: hsla(0, 0%, 60%, 1);
  --c_grey-500: hsla(0, 0%, 40%, 1);
  --c_grey-600: hsla(0, 0%, 20%, 1);

  --c_black-100: hsla(0, 0%, 9%, 1);
  --c_black-200: hsla(255, 8%, 10%, 1);

  --c_black-09: hsla(0, 0%, 0%, .9);
  --c_black-06: hsla(0, 0%, 0%, .6);
  --c_black-04: hsla(0, 0%, 0%, .4);

  --c_violet-100: hsla(274, 70%, 80%, 1);
  --c_violet-200: hsla(274, 82%, 73%, 1);
  --c_violet-200-04: hsla(274, 82%, 73%, .4);
  --c_violet-300: hsla(274, 83%, 73%, 1);
  --c_violet-400: hsla(274, 55%, 59%, 1);
  --c_violet-500: hsla(274, 42%, 45%, 1);
  --c_violet-600: hsla(291, 42%, 45%, 1);
  --c_violet-700: hsla(273, 42%, 45%, 1);

  --c_pink: hsla(351, 48%, 70%, 1);

}

.p_cont_x {padding-left: var(--padding_container_x); padding-right: var(--padding_container_x);}


.c_white-085 {color: var(--c_white-085);}
.c_white-07 {color: var(--c_white-07);}
.c_grey-100 {color: var(--c_grey-100);}
.c_grey-200 {color: var(--c_grey-200);}
.c_grey-300 {color: var(--c_grey-300);}
.c_grey-400 {color: var(--c_grey-400);}
.c_grey-500 {color: var(--c_grey-500);}
.c_grey-600 {color: var(--c_grey-600);}

.c_black-100 {color: var(--c_black-100);}
.c_black-200 {color: var(--c_black-200);}

.c_black-09 {color: var(--c_black-09);}
.c_black-06 {color: var(--c_black-06);}
.c_black-04 {color: var(--c_black-04);}

.c_violet-100 {color: var(--c_violet-100);}
.c_violet-200 {color: var(--c_violet-200);}
.c_violet-200-04 {color: var(--c_violet-200-04);}
.c_violet-300 {color: var(--c_violet-300);}
.c_violet-400 {color: var(--c_violet-400);}
.c_violet-500 {color: var(--c_violet-500);}
.c_violet-600 {color: var(--c_violet-600);}
.c_violet-700 {color: var(--c_violet-700);}

.c_pink {color: var(--c_pink);}

/*  ===============  decoration  ==============  */
/*border*/
.brd-c_white-085 {border-color: var(--c_white-085);}
.brd-c_white-07 {border-color: var(--c_white-07);}
.brd-c_grey-100 {border-color: var(--c_grey-100);}
.brd-c_grey-200 {border-color: var(--c_grey-200);}
.brd-c_grey-300 {border-color: var(--c_grey-300);}
.brd-c_grey-400 {border-color: var(--c_grey-400);}
.brd-c_grey-500 {border-color: var(--c_grey-500);}
.brd-c_grey-600 {border-color: var(--c_grey-600);}

.brd-c_black-100 {border-color: var(--c_black-100);}
.brd-c_black-200 {border-color: var(--c_black-200);}

.brd-c_black-09 {border-color: var(--c_black-09);}
.brd-c_black-06 {border-color: var(--c_black-06);}
.brd-c_black-04 {border-color: var(--c_black-04);}

.brd-c_violet-100 {border-color: var(--c_violet-100);}
.brd-c_violet-200 {border-color: var(--c_violet-200);}
.brd-c_violet-200-04 {border-color: var(--c_violet-200-04);}
.brd-c_violet-300 {border-color: var(--c_violet-300);}
.brd-c_violet-400 {border-color: var(--c_violet-400);}
.brd-c_violet-500 {border-color: var(--c_violet-500);}
.brd-c_violet-600 {border-color: var(--c_violet-600);}
.brd-c_violet-700 {border-color: var(--c_violet-700);}

.brd-c_pink {border-color: var(--c_pink);}
/*background*/
.b-c_white-085 {background-color: var(--c_white-085);}
.b-c_white-07 {background-color: var(--c_white-07);}
.b-c_grey-100 {background-color: var(--c_grey-100);}
.b-c_grey-200 {background-color: var(--c_grey-200);}
.b-c_grey-300 {background-color: var(--c_grey-300);}
.b-c_grey-400 {background-color: var(--c_grey-400);}
.b-c_grey-500 {background-color: var(--c_grey-500);}
.b-c_grey-600 {background-color: var(--c_grey-600);}

.b-c_black-100 {background-color: var(--c_black-100);}
.b-c_black-200 {background-color: var(--c_black-200);}

.b-c_black-09 {background-color: var(--c_black-09);}
.b-c_black-06 {background-color: var(--c_black-06);}
.b-c_black-04 {background-color: var(--c_black-04);}

.b-c_violet-100 {background-color: var(--c_violet-100);}
.b-c_violet-200 {background-color: var(--c_violet-200);}
.b-c_violet-200-04 {background-color: var(--c_violet-200-04);}
.b-c_violet-300 {background-color: var(--c_violet-300);}
.b-c_violet-400 {background-color: var(--c_violet-400);}
.b-c_violet-500 {background-color: var(--c_violet-500);}
.b-c_violet-600 {background-color: var(--c_violet-600);}
.b-c_violet-700 {background-color: var(--c_violet-700);}

.b-c_pink {background-color: var(--c_pink);}

/* ===================  Pseudo-classes  ===========  */
/*focuse*/
.foc_b-c_violet-700:focus {background-color: var(--c_violet-700);}
.foc_brd-c_violet-400:focus {border-color: var(--c_violet-400);}
.foc_brd-c_violet-200:focus {border-color: var(--c_violet-200);}


/*hover*/
.hov_c_violet-200:hover {color: var(--c_violet-200);}
.hov_c_violet-400:hover {color: var(--c_violet-400);}
.hov_brd-c_violet-400:hover {border-color: var(--c_violet-400);}
.hov_brd-c_violet-200:hover {border-color: var(--c_violet-200);}
.hov_bef_b-c_violet-200-04:hover::before {background-color: var(--c_violet-200-04);}

.hov_svg_violet-200:hover path,
.hov_svg_violet-200:hover rect {fill: var(--c_violet-200);}

/*active*/
.act_c_violet-700:active {color: var(--c_violet-700);}
.act_c_violet-400:active {color: var(--c_violet-400);}
.act_brd-c_violet-100:active {border-color: var(--c_violet-100);}
.act_brd-c_violet-700:active {border-color: var(--c_violet-700);}

.act_svg_violet-400:active path, .act_svg_violet-400:active rect {fill: var(--c_violet-400);}
.act_svg_violet-700:active path, .act_svg_violet-700:active rect {fill: var(--c_violet-700);}

/*focuse-none*/
.foc_b-c_none:hover,
.foc_b-c_none:active {background-color: transparent;}
.foc_brd-c_none:hover,
.foc_brd-c_none:active {border-color: transparent;}

/*M1--*/
@media (max-width: 1440px) {
  :root {
    --padding_container_x: 50px;
  }

  .M1--b-c_black-200 {background-color: var(--c_black-200);}
}

/*M2--*/
@media (max-width: 1024px) {

}

/*M3--*/
@media (max-width: 992px) {

}

/*M4--*/
@media (max-width: 768px) {
  :root {
    --max-sz_1: 50;    /* max size for max viewport (without a unit of measurement!!!)*/
    --min-sz_1: 15;     /* mix size for min viewport  (without a unit of measurement!!!)*/
    --max-M_1: 768;    /* max viewport  (without a unit of measurement!!!)*/
    --min-M_1: 425;    /* min viewport  (without a unit of measurement!!!)*/
    --fn-scale_1: calc(var(--min-sz_1)*1px + (var(--max-sz_1) - var(--min-sz_1))*((100vw - var(--min-M_1)*1px)/(var(--max-M_1) - var(--min-M_1))));

    --padding_container_x: var(--fn-scale_1);
  }
}

/*M5--*/
@media (max-width: 576px) {

}

/*M6--*/
@media (max-width: 425px) {
  :root {
    --padding_container_x: 15px;
  }
}
